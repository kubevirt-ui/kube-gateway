apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: oc-gate
  name: oc-gate-sa
  namespace: oc-gate
secrets:
- name: oc-gate-secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: oc-gate
  name: oc-gate-cluster-reader
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: oc-gate
  name: oc-gate-cluster-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oc-gate-cluster-reader
subjects:
- kind: ServiceAccount
  name: oc-gate-sa
  namespace: oc-gate
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: oc-gate-secrets
  labels:
    app: oc-gate
  name: oc-gate-svc
  namespace: oc-gate
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: oc-gate
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oc-gate
  name: oc-gate-proxy
  namespace: oc-gate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oc-gate
  template:
    metadata:
      labels:
        app: oc-gate
    spec:
      containers:
      - command:
        - ./oc-gate
        - -api-server=$(API_URL)
        - -ca-file=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - -cert-file=/secrets/tls.crt
        - -key-file=/secrets/tls.key
        - -oauth-server-disable
        - -base-address=https://$(ROUTE_URL)
        - -listen=$(LISTEN)
        - -jwt-token-key-file=/jwt-secret/cert.pem
        - -k8s-bearer-token-file=/var/run/secrets/kubernetes.io/serviceaccount/token
        - -k8s-bearer-token-passthrough=$(TOKEN_PASSTHROUGH)
        env:
        - name: API_URL
          value: https://kubernetes.default.svc
        - name: ROUTE_URL
          value: oc-gate.apps-crc.testing
        - name: TOKEN_PASSTHROUGH
          value: "false"
        - name: LISTEN
          value: https://0.0.0.0:8080
        image: quay.io/yaacov/oc-gate
        name: oc-gate
        ports:
        - containerPort: 8080
          name: oc-gate-https
        volumeMounts:
        - mountPath: /secrets
          name: secrets
        - mountPath: /jwt-secret
          name: jwt-secret
        - mountPath: /app/web
          name: web-app
      initContainers:
      - command:
        - /bin/cp
        - -r
        - /data/web/public
        - /app/web/
        image: quay.io/yaacov/oc-gate-web-app-novnc
        name: oc-gate-web-app
        volumeMounts:
        - mountPath: /app/web
          name: web-app
      serviceAccountName: oc-gate-sa
      volumes:
      - name: jwt-secret
        secret:
          secretName: oc-gate-jwt-secret
      - name: secrets
        secret:
          secretName: oc-gate-secrets
      - emptyDir: {}
        name: web-app
---
apiVersion: oauth.openshift.io/v1
grantMethod: auto
kind: OAuthClient
metadata:
  labels:
    app: oc-gate
  name: oc-gate-client
  namespace: oc-gate
redirectURIs:
- https://oc-gate.apps-crc.testing/auth/callback
secret: my-secret
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: oc-gate
  name: oc-gate-route
  namespace: oc-gate
spec:
  host: oc-gate.apps-crc.testing
  port:
    targetPort: 8080
  tls:
    termination: reencrypt
  to:
    kind: Service
    name: oc-gate-svc
    weight: 100
  wildcardPolicy: None
